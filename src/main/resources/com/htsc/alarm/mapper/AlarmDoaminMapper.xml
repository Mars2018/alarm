<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.htsc.alarm.dao.AlarmDoaminMapper" >
  <resultMap id="BaseResultMap" type="com.htsc.alarm.domain.AlarmDoamin" >
    <id column="alarm_id" property="alarmId" jdbcType="INTEGER" />
    <result column="service_id" property="serviceId" jdbcType="INTEGER" />
    <result column="alarm_time" property="alarmTime" jdbcType="TIMESTAMP" />
    <result column="alarm_level" property="alarmLevel" jdbcType="INTEGER" />
    <result column="is_solved" property="isSolved" jdbcType="INTEGER" />
    <result column="solve_record" property="solveRecord" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    alarm_id, service_id, alarm_time, alarm_level, is_solved, solve_record
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.htsc.alarm.domain.AlarmDoaminExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from alarms
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from alarms
    where alarm_id = #{alarmId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from alarms
    where alarm_id = #{alarmId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.htsc.alarm.domain.AlarmDoamin" >
    insert into alarms (alarm_id, service_id, alarm_time, 
      alarm_level, is_solved, solve_record
      )
    values (#{alarmId,jdbcType=INTEGER}, #{serviceId,jdbcType=INTEGER}, #{alarmTime,jdbcType=TIMESTAMP}, 
      #{alarmLevel,jdbcType=INTEGER}, #{isSolved,jdbcType=INTEGER}, #{solveRecord,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.htsc.alarm.domain.AlarmDoamin" >
    insert into alarms
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="alarmId != null" >
        alarm_id,
      </if>
      <if test="serviceId != null" >
        service_id,
      </if>
      <if test="alarmTime != null" >
        alarm_time,
      </if>
      <if test="alarmLevel != null" >
        alarm_level,
      </if>
      <if test="isSolved != null" >
        is_solved,
      </if>
      <if test="solveRecord != null" >
        solve_record,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="alarmId != null" >
        #{alarmId,jdbcType=INTEGER},
      </if>
      <if test="serviceId != null" >
        #{serviceId,jdbcType=INTEGER},
      </if>
      <if test="alarmTime != null" >
        #{alarmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="alarmLevel != null" >
        #{alarmLevel,jdbcType=INTEGER},
      </if>
      <if test="isSolved != null" >
        #{isSolved,jdbcType=INTEGER},
      </if>
      <if test="solveRecord != null" >
        #{solveRecord,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.htsc.alarm.domain.AlarmDoaminExample" resultType="java.lang.Integer" >
    select count(*) from alarms
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.htsc.alarm.domain.AlarmDoamin" >
    update alarms
    <set >
      <if test="serviceId != null" >
        service_id = #{serviceId,jdbcType=INTEGER},
      </if>
      <if test="alarmTime != null" >
        alarm_time = #{alarmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="alarmLevel != null" >
        alarm_level = #{alarmLevel,jdbcType=INTEGER},
      </if>
      <if test="isSolved != null" >
        is_solved = #{isSolved,jdbcType=INTEGER},
      </if>
      <if test="solveRecord != null" >
        solve_record = #{solveRecord,jdbcType=VARCHAR},
      </if>
    </set>
    where alarm_id = #{alarmId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.htsc.alarm.domain.AlarmDoamin" >
    update alarms
    set service_id = #{serviceId,jdbcType=INTEGER},
      alarm_time = #{alarmTime,jdbcType=TIMESTAMP},
      alarm_level = #{alarmLevel,jdbcType=INTEGER},
      is_solved = #{isSolved,jdbcType=INTEGER},
      solve_record = #{solveRecord,jdbcType=VARCHAR}
    where alarm_id = #{alarmId,jdbcType=INTEGER}
  </update>
</mapper>